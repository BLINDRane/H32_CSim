Program	= Functions functs; Declarations decls; Statements body;
Functions = ArrayList<Function>
Function = Variable v; Type t; Params p; Declarations decls; Statements body;
Params = ArrayList<VariableDecl>
Declarations = ArrayList<Declaration>
Declaration = VariableDecl | ArrayDecl
VariableDecl = Variable v; Type t;
ArrayDecl = Variable v; Type t; int Size;
Type = int | bool | char | void 
Statements = ArrayList<Statement>
Statement = Block | Assignment | Conditional | Loop | Proccall | Return
Block = ArrayList<Statement>
Assignment = VarRef target; Expression source;
Conditional = Expression test; Statements thenBranch, elseBranch;
Loop = Expression test; Statement body;
Proccall = Variable name; ExprList params;
Return = Expression expr;
ExprList = ArrayList<Expression>
Expression = VarRef | Literal | Binary | Unary | Funcall
VarRef = Variable | ArrayRef
Binary = Operator op; Expression lhs, rhs;
Unary = UnaryOp op; Expression term;
Operator = BooleanOp | RelationalOp | ArithmeticOp
BooleanOp = && | ||
RelationalOp = == | != | < | <= | > | >=
ArithmeticOp = + | - | * | / | %
UnaryOp = ! | - | & | * | ++ | --
Funcall = Variable name; ExprList params;
Variable = String id;
ArrayRef = String id; Expression index;
Literal = IntValue | BoolValue | CharValue | StringValue
IntValue = int value;
BoolValue = boolean value;
CharValue = char value;
StringValue = String value;